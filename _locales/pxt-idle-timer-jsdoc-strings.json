{
  "IDLETIMER_BUS_ID": "micro:bit Message Bus ID of listener : 1-65535\nCustom Message Bus ID : 32768-65535\nhttps://github.com/jp-rad/pxt-ubit-extension/blob/master/doc/CustomMicroBit.h",
  "IDLETIMER_BUS_ID.IDLETIMER_ID_INTERVAL": "Idle-Timer Interval Event Bus ID.\n(32768 + 1024 + 10 = 33802)",
  "IDLETIMER_BUS_ID.IDLETIMER_ID_STARTSTOP": "Idle-Timer Start/Stop Event Bus ID.\n(32768 + 1024 + 9 = 33801)",
  "IDLETIMER_BUS_ID.IDLETIMER_ID_TIMEOUT": "Idle-Timer Timeout Event Bus ID.\n(32768 + 1024 + 11 = 33803)",
  "IdleTimer": "Timer 1,2,3\n<MicroBitTimer.h>",
  "TimerStatus": "Timer status\n<MicroBitTimer.h>",
  "idletimer": "The idle timer generates interval and timeout events while measuring elapsed time.",
  "idletimer.IntervalTimeoutTimerArgs": "interval and timeout timer\n\n\n@returns param to start",
  "idletimer.IntervalTimeoutTimerArgs|param|interval_ms": "interval (ms)",
  "idletimer.IntervalTimeoutTimerArgs|param|timeout_ms": "timeout (ms)",
  "idletimer.IntervalTimerArgs": "interval timer\n\n@returns param to start",
  "idletimer.IntervalTimerArgs|param|interval_ms": "interval (ms)",
  "idletimer.TimeoutTimerArgs": "timeout timer\n\n@returns param to start",
  "idletimer.TimeoutTimerArgs|param|timeout_ms": "timeout (ms)",
  "idletimer.TimerArgs": "TimerArgs to start",
  "idletimer.change": "change timeout if timeout is set",
  "idletimer.change|param|timeout_ms": "timeout(ms)",
  "idletimer.change|param|timer": "timer id",
  "idletimer.doStart": "(internal) start",
  "idletimer.doStart|param|interval_ms": "interval (ms) - Interval events occur at time intervals. If 0, no interval event occurs.",
  "idletimer.doStart|param|timeout_ms": "timeout (ms) - When the timeout occurs, the timer stops and a timeout event occurs. If 0, no timeout will occur",
  "idletimer.doStart|param|timer": "timer id",
  "idletimer.getMillis": "(internal) millis",
  "idletimer.getStatus": "(internal) status",
  "idletimer.isRunning": "running\n\n@returns running",
  "idletimer.isRunning|param|timer": "timer id",
  "idletimer.isTimeouted": "timeouted\n\n@returns timeouted",
  "idletimer.isTimeouted|param|timer": "timer id",
  "idletimer.millis": "elapsed time\n\n@returns millis",
  "idletimer.millis|param|timer": "timer id",
  "idletimer.onInterval": "on interval",
  "idletimer.onInterval|param|timer": "timer id",
  "idletimer.onTimeout": "on timeouted",
  "idletimer.onTimeout|param|timer": "timer id",
  "idletimer.resume": "resume",
  "idletimer.resume|param|timer": "timer id",
  "idletimer.start": "start",
  "idletimer.start|param|args": "TimerArgs - interval(ms), timeout(ms)",
  "idletimer.start|param|timer": "timer id",
  "idletimer.stop": "stop",
  "idletimer.stop|param|timer": "timer id"
}